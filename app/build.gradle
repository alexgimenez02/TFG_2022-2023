plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
android {
    namespace 'com.example.tfgapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.tfgapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue("string", "NASA_API_KEY", localProperties['NASA_API_KEY'])
            resValue("string", "FirebaseURL", localProperties['FIREBASE_URL'])
            resValue("string", "NEWS_API_KEY", localProperties['NEWS_API_KEY'])
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            manifestPlaceholders = [googleApiKey: "${properties.getProperty('GOOGLE_API_KEY')}"]
        }
        debug {
            resValue("string", "NASA_API_KEY", localProperties['NASA_API_KEY'])
            resValue("string", "FirebaseURL", localProperties['FIREBASE_URL'])
            resValue("string", "NEWS_API_KEY", localProperties['NEWS_API_KEY'])
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            manifestPlaceholders = [googleApiKey: "${properties.getProperty('GOOGLE_API_KEY')}"]
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    // https://firebase.google.com/docs/android/setup#available-libraries

    implementation 'com.google.android.gms:play-services-cronet:18.0.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'org.chromium.net:cronet-api:108.5359.79'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    api 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    api 'com.squareup.okhttp:okhttp:2.2.0'
    api 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.google.firebase:firebase-database:20.1.0'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.github.KwabenBerko:News-API-Java:1.0.2'

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}